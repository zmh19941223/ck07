# 20210630白板

+ ngrinder：
  + maven+groovy 进行脚本开始， ngrinder的版本要等于3.5.2
  + ngrinder最新版本， 3.5.5 有兼容性问题 管理台界面会打不开
  + ngrinder 建议使用3.5.2

=====留下的问题，后面再给大家讲

+ 性能测试场景设计

  + 如果公司要求你去做性能测试，

    =====“需求”， 活动页面，要你做性能测试， 看是否能满足1000个人同时访问。

    需求2： 商定，对接的接口，要满足 50tps。---这样的场景怎么设计

    需求3:  秒杀活动，我要看，秒杀时，服务器能否支持500个人同时秒杀。

  + 6种常见设计方法

    + 普通性能场景设计
    + 阶梯性能场景(负载测试场景)
    + 压力测试场景
    + 面向目标场景（lr很容易，但是jmeter，没有系统讲解，不知道怎么做）
    + 混合场景设计（混合，if条件）不同数量的人，向不同的接口发起请求
    + 有时间规律场景

  + 普通性能场景

    + 线程组

      + 线程数： 模拟的并发用户数量

        + 线程数，有没有限制呢？
          + jmeter本身是没有对线程数做限制
          + 但是， jmeter启动这些并发用户数时，需要消耗资源，受电脑cpu的主频限制，一台电脑不可能创建无限量的线程数
            + 实际的情况，**http协议**的脚本，线程数，大概能 1500左右  2000个可能产生，但是可能会出错，1000左右比较保守，可能能产生。
            + 也就是说，1台电脑，**http协议**脚本，保守估计是可以参数1000个并发用户数
            + 如果你想模拟超过1000并发用户数，你可能需要考虑 **分布式**

      + ramp-up时间

        + 启动所有线程数启动的时间(线程数在合理的范围)

          + 在ramp-up时间结束点，所有的人会产生
          + 在ramp-up时间内，是否均匀产出并发用户数，是不确定
          + 在启动时间内，产生的并发用户数，一产生，就去发起请求
          + 启动了并发用户，就会去发起请求，不同时间产生的并发用户数，与前面产生的并发用户数，调用的接口可能不一样
          + jmeter做性能测试，更多时候，使用的是，广义并发
          + ramp-up时间要**大于等于1**

        + 线程数 + ramp-up时间，怎么设置才比较合理？

          + 500以内并发用户， ramp-up   2~4s
          + 500-1000    ramp-up  5s
          + \>1000    ramp-up 5-8s

          一个原则： ramp-up时间在总执行时间中，占比要很低

          一般的情况，一个性能测试的总执行时间  几十秒钟  ~ 几十分钟

      + 循环次数

        + 默认必须**大于等于1**
        + 循环次数，就是每个并发用户数要去执行的请求数量
        + 复习框  永远     一直循环，直到你点击停止，才会
          + 这个停止会有问题吗？
            + 会有问题，会导致请求报错，或卡死
        + **永远**  应该怎么用呢？
          + 要与  调度器 一起使用
            + **必须把两个勾 都勾选**
          + 调度器：
            + 持续时长
            + 启动延迟
        + 场景：
          + 30个并发用户，持续运行300s
          + 聚合报告： avgRT： 1.364s  90%RT：1.63s   avgTPS： 21.9
          + 结论：
            + 90%RT：1.63s  可以看到，这个响应时间是比较长，已经超过了我们用户能容忍的范围了，用户满意度指数1.5s，说明我们的接口响应比较慢。
            + 30个人， avgTPS： 21.9    tps<user  那么，每个人1秒钟发不了1个请求，所以，我们次数 30个并发用户数，已经超过了我们项目这个接口能承受最大并发用户数了。
            + 可以简单得到一个结论： 服务器注册接口最大并发用户数小于30的

+ 负载测试性能场景
  + 负载测试： 逐步增加并发用户数
  + 插件，
    + 插件管理： jpgc  安装这个插件 
    + **用 5秒钟 增加10个并发用户数，持续运行30秒**

完全不知道项目的性能瓶颈范围时，我们怎么设置 0~ 100 

已经找到一个范围了，怎么设置？

注册接口的最大并发用户数  29 

