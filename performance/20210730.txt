# 20210730白板

+ load average: 
+ Task   Thread  两个数字不相同，  Thread数字大于Task数字， 因为 一个进程可能有多个线程

+ top命令中按数字1可以看到 多个核，每个核的cpu的使用情况
  + 在没有按1，  在我们用监控工具\平台来收集cpu的使用率
    + 看到是 所有cpu数量的一个总体的使用率

+ mem： buffer cache swap
  + buffer是磁盘虚拟出来的一个缓冲区，用于内存**读取**磁盘数据时，加快读取速度
  + cache 缓存，存在内存、cpu中，
  + swap  交互分区  主要是用来，交换内存空间。它也是由磁盘虚拟而来，一般为内存的2倍
+ 任何一个程序启动，都会在内存中占用：虚拟内存核物理内存

+  PID 进程id
+ USER      进程的归属用户
+ PR  优先级的级别
+ NI    优先级的值，越低，优先级越高

-----------

+ VIRT  虚拟内存  进程使用虚拟内存大小   默认是KB
+ RES    物理内存大小  进程使用的物理内存大小 默认是KB
+ SHR   共享内存大小 默认单位也是KB   

这三个都是进程的内存相关数据，按小写e  可以切换单位

------------

+ S  进程的状态
+ %CPU   进程占用的cpu率
+ %MEM     进程使用men率
+ TIME+  进程使用cpu的时间
+ COMMAND   进程名称

查看当前系统cpu使用率最高的4个进程： n  4 回车

top命令默认3秒钟刷新一次数据： s\d 数字

我只想看某个进程下的线程资源使用情况: top -H -p pid值

us\usr、sy\sys

+ ps
  + ps -ef\\-eF\\-ely 使用标准语法查看系统上的每个进程

ps aux |grep mysqld |grep -v grep 



+ vmstat  
  + 这个命令是系统自带
  + 虚拟内存统计的缩写，可对虚拟内存、进程、cpu活动进行监控

```sh
[root@vircent7 ~]# vmstat 1 1
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 2  0      0 1094548   2108 362988    0    0    58     7   40   52  0  0 100  0  0

```

+ procs
  + r  :  数字  显示cpu中有多少个进程正在等待
    + 如果r列是数字，大于cpu核数，那么说明现在现在有大量的进程在等待cpu进行计算，现在可能出现了cpu不够用的情况。----cpu成了我们的性能瓶颈，此时，可能需要去增加cpu数量；或者减少运行的进程数。
  + b ： 数字   现在有多少进程正在不可中断的休眠.   如果这个数字过大，就说明，资源不够用。

+ memory
  + swap
  + free
  + buff\buffer
  + cache

+ swap
  + si  交换分区中的换入
  + so 交换分区中的换出
+ io
  + bi  块设备的读
  + bo  块设备的写
+ system
  + in  interrupet  cpu中断   数字
  + cs  cpu上下文切换  数学
+ cpu
  + us 
  + sy 
  + id 
  + wa 
  + st
+ sysstat的工具包，这个工具包中带了很性能分析命令`yum install sysstat -y`
  + mpstat  查看cpu的相关数据
  + mpstat -P ALL 2 5
    +  %usr   
    + %nice   
    +  %sys 
    + %iowait    
    + %irq    硬中断
    + %soft  软中断
    + %steal  
    + %guest    显示cpu或cpu运行虚拟机处理器所花费的时间占比
    + %gnice   显示cpu或cpu运行nices客户机所花费的时间占比
    + %idle

+ pidstat： 能看磁盘、内存、cpu的数据，主要看cpu的上下文数据

  + pidstat -u -w 1 5
    + -u 用于查看cpu的数据
    + -w  看cpu的上下文数据
    +  UID       PID   
    + cswch/s   自愿上下文切换次数
    + nvcswch/s   非自愿上下文切换次数
    + Command

  + 中断  VS  上下文切换：
    + 中断： 中断当前正在运行的，去做其他事情
    + 上下文切换： 资源的切换
    + 中断，一定会导致上下文切换，但是上下文切换，不一定会中断。

+ iostat：  看数据换入换出

  + iostat -dx 1 3    ------没有带m，数据单位，默认kb
    + rrqm/s    合并的每秒读请求
    + wrqm/s     合并的每秒写请求
    + r/s    读/秒
    + w/s    写/s
    + rkB/s     读kb/s
    + wkB/s 
    + avgrq-sz   平均情况的扇区数
    + avgqu-sz   等待大的请求数
    + await   等待的时间
    + r_await   读等待的时间
    + w_await  写等待的时间
    + svctm   实际请求的时间
    + %util   至少有一个活跃请求的所占的时间百分比

+ dstat
  + yum install dstat -y
  + dstat -lcmdry