# 20210830白板

+ 数据库
  + 建表： 建表的时候，要特别注意，存储引擎，因为，存储引擎，直接影响这个表的性能。
  + mysql5.5版本，表默认存储引擎是 **InnoDB**
    + 事务有限型，**行锁**，索引B树
  + mysql5.5版本，表的默认存储引擎 **MyISAM**
    + 性能优先，**表锁**，索引B树、hash索引

+ 建立好了表，表就会有多个字段，往里面写入数据。
  + 一般不建议在关系型数据库表中，填加过多字段。
  + 表列建立索引，主键，默认就是索引。
+ 索引：
  + 建立索引的目的，是加快数据**查找速度**。
  + 建索引，会增大真个文件，写入数据时，表的文件大小会发生变化，索引也会发生变化，写入数据，**降低修改速度**。
  + 但是，在数据库的使用过程中，查 使用频率时远远高于  修改频率。
  + 索引种类：
    + 主键索引：  表的主键   create **index** 索引名称 on table(col);
    + 唯一索引:  NULL 可以为多个
    + 符合索引： 就要特别注意，字段顺序。create **index** 索引名称 on table(col,col.....);
      + 我们在写sql语句时，where条件后面的顺序，要和复合索引字段顺序要一致。

+ 建立了数据库和表之后，在/var/lib/mysql路径下，就有数据库名称文件夹
  + 文件夹中，就有表名称的文件
  + Innodb
    + ibd文件，这个表是InnoDB存储引擎时， 数据文件
    + frm文件，就是表结构文件
  + MyISAM
    + frm文件，表结构文件
    + MYD文件，数据文件
    + MYI文件，索引文件

+ 索引的优劣：
  + 不足： 
    + 建立索引，文件比较大，时间也比较长
    + 并不是所有的表都可以建索引，数据量太少，根本就无法发现性能问题。
    + 建索引，会降低 修改 数据速度
  + 优势：
    + 提升我们查询速度

+ B树
  + 链表
  + 二叉树
  + B树，可以理解为二叉树，进行旋转而建立一个立体的二叉树集

+ 存储引擎  vs  存储过程
  + 存储引擎表的类型
  + 存储过程，是sql函数
+ 视图：
  + 虚拟表

+ 查询语句的写法：
  + select语句的解析过程，是按照写的顺序来解析的吗？
  + 不同
+ 查询语句的解析过程：
  + from  表
  + where 条件  过滤数据  ===== 条件，影响性能
  + group by  查询结果条件来分组  ====列没有变化
  + select   字段     ======这一步的时候，列的数量才会变化
  + order by  字段 =====  排序
  + limit  数量

+ 梳理前面我们说的影响数据库性能的地方：
  + 1、表的存储引擎
  + 2、表的字段
  + 3、表的索引
  + 4、sql语句，where条件
  + 5、sql语句，oder by
+ 数据库的性能优化：
  + 数据库的优化，两个方向： os+库， 表+sql
  + 数据库，存储数据，必然有服务器磁盘操作，磁盘的读写速度也会影响性能，所以，数据库服务器，一般选择IO性能比较高的磁盘，磁盘空间比较大
  + os： ulimit -n   打开文件数量































