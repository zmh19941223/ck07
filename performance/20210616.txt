# 20210616白板

+ 逻辑控制 ------ jmeter脚本性能转换
+ 用jmeter写脚本，可以去做接口测试、自动化测试、性能测试
  + 但是，*接口测试、自动化测试脚本，<u>不能直接用于性能测试</u>*，需要进行性能转换，才能用于性能测试
  + 性能测试脚本，可以直接用于接口测试、自动化测试。
    + 性能测试，要尽可能的降低jmeter**工具自身**对资源消耗
      + 接口测试、自动化测试脚本，一定会添加**断言**，断言的目的是判断，是否有bug，断言这个元件在执行时，资源消耗，来自jmeter工具的资源，这个时间和资源的消耗，都是本机的，不是服务器消耗的时间和资源。-----我个人观点里面，是不要加断言。
      + Beanshell元件，写脚本时，只考虑功能能实现即可，不会过多去考虑，元件使用的时间、资源消耗。 
        + 性能测试中， Beanshell所有元件，能不用则不用，如果，一定要写java代码来处理的 JSR223、${\_\_jexl3(,)}、${\_\_groovy(,)}
        + 元件的选择：
          + JSR223
          + DDT
        + 运行模式:   GUI 图形界面模式，===只用于编辑调试脚本
          + 真正性能测试用  CLI模式  ---无图形界面模式

+ 循环控制
+ foreach控制
+ if条件控制
  + 默认勾选： Interpret condition as variable
    + 条件框中的，**结果**为true、false要使用jexl3 和 groovy
  + 不勾选：Interpret condition as variable
    + 条件框中， 运算过程(表达式)的结果为true、false

+ 事务控制器：
  + 在jmeter中，默认一个取样器，就是一个事务
  + 事务控制器，控制其子集取样器(n)，合并为一个事务
    + 事务： TPS    服务器每秒处理的事务数
    + 在事务控制器下，挂载多个取样器，想要把多个取样器合并为1个事务，**必须勾选**“Generate parent sample”
  + 性能测试中，是否要勾选“Generate parent sample”？
    + 性能测试，要先做单接口的性能测试，然后再做多接口的性能测试。
    + 在做多接口合并的时候，需要勾选。
    + 在性能测试中， 需要先用单个取样器，做出某个接口的性能测试指标，然后再出多个接口的性能指标， 然后再使用事务控制器，勾选Generate parent sample，做出业务的性能指标， 把所有 业务都出来，再合并，做出整个系统的性能指标
      + 如果领导要你做某个业务的性能指标，哪你，需要先梳理出，这个业务所有的接口，然后对这个业务所有的接口进行性能测试，得到性能指标，然后，再使用事务控制器，合并取样器，最终才得到 业务的性能指标。
    + 真正做性能测试时，所有的监听器，都要禁用

+ 聚合报告\汇总报告
  + 在性能测试中，看聚合报告，有前提条件：
    + 1、**没有网络瓶颈**
      + 因为，在很多时候，我们在看聚合报告时，会把 **吞吐量的值**  等价为 **TPS的值**
      + 怎么判断有没有网络瓶颈?
        + 聚合报告最后两列，是 吞吐率   吞吐率 与我们的带宽是有关系， 吞吐率，是可以看出是否存在网络带宽问题？
        + 20Mb  100Mb
        + 1Mb =  1 x 1024kb = 1024kb/8  = 128KB/s
        + 企业服务器，一般电商类的产品，也就几m带宽
    + 2、**并发用户数不变**
      + 负载测试时，并发用户数会随着时间变化，而变化，就不能看聚合报告。
  + 每一行：都是一种事务
  + 每一列：
    + 样本： 在过程的过程中，所有的并发用户数，在一段时间中的总请求量
      + 单独看样本，是无法知道并发用户数、 执行时长
      +  10r x 60s x pl  = 472     pl=0.78  tps
    + 平均值...........最大值： 响应时间   单位是  毫秒ms
      + 90%： 所有的样本中，有90%的样本时间是小于等于这个时间的









