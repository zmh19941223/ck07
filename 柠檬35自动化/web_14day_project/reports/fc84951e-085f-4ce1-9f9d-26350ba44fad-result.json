{"name": "test_teach_start_attend", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_work_attendance.TestAttend2 object at 0x0CFCD090>\nteach_login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1535af0e0382270420a503e737653030\")>\n\n    def test_teach_start_attend(self, teach_login):\n        # --------------老师开启考勤-----------\n        my_log.info(\"=========步骤一：老师开启考勤=======\")\n        driver = teach_login\n        IndexPage(driver).enter_course(GD.course_id)\n        # =====课程页面====\n        course_page = CoursePage(driver)\n        # 新建考勤\n>       course_page.create_attendance()\n\ntestcases\\test_work_attendance.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\coursePage.py:30: in create_attendance\n    self.enter_attend()\npage\\coursePage.py:25: in enter_attend\n    self.switch_to_iframe_loc(loc.attend_iframe_loc, '课程页面_考勤iframe')\ncommon\\base_page.py:250: in switch_to_iframe_loc\n    raise e\ncommon\\base_page.py:244: in switch_to_iframe_loc\n    EC.frame_to_be_available_and_switch_to_it(loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1535af0e0382270420a503e737653030\")>\nmethod = <selenium.webdriver.support.expected_conditions.frame_to_be_available_and_switch_to_it object at 0x0D002650>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "失败截图", "source": "9ebf60e3-c352-435d-9216-0bb0677185b5-attachment.png", "type": "image/png"}, {"name": "log", "source": "a1f06bb1-2096-43b1-ba5f-f1d467ce5d06-attachment.txt", "type": "text/plain"}], "start": 1614390616434, "stop": 1614390651621, "uuid": "865d5537-4158-4a71-9a67-af30a3730017", "historyId": "8ff0acbec7ead0036d84a4c76f1ed7d3", "testCaseId": "2a25346b860ad50acabfa327ab3c6d09", "fullName": "testcases.test_work_attendance.TestAttend2#test_teach_start_attend", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_work_attendance"}, {"name": "subSuite", "value": "TestAttend2"}, {"name": "host", "value": "MuSen"}, {"name": "thread", "value": "10752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_work_attendance"}]}