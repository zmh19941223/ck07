{"name": "test_assert_attend_number", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_work_attendance.TestAttend2 object at 0x00A8FE70>\nteach_login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"798f56bdf57c2c0e678131f561a49676\")>\n\n    def test_assert_attend_number(self, teach_login):\n        # -----------------数据校验----------------\n        my_log.info(\"=========步骤三：校验考勤人数=======\")\n        time.sleep(3)\n        # 老师获取考勤人数\n        driver2 = teach_login\n        # 进入课程\n        IndexPage(driver2).enter_course(GD.course_id)\n        # 点击考勤\n        course_page = CoursePage(driver2)\n        course_page.enter_attend()\n        # 获取考勤页面\n>       e_attend_number = course_page.get_attendance_number()\n\ntestcases\\test_work_attendance.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\coursePage.py:63: in get_attendance_number\n    self.wait_element_visibility(loc.current_number_loc, '课程页面_已考勤人数')\ncommon\\base_page.py:190: in wait_element_visibility\n    raise e\ncommon\\base_page.py:184: in wait_element_visibility\n    EC.visibility_of_element_located(loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"798f56bdf57c2c0e678131f561a49676\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00AA4530>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "失败截图", "source": "b4fbaeed-e27f-4a08-9315-d28719e15200-attachment.png", "type": "image/png"}, {"name": "log", "source": "00de69eb-a4a3-468c-900d-16ab7d900c3f-attachment.txt", "type": "text/plain"}], "start": 1614390674060, "stop": 1614390692420, "uuid": "1da685f4-3fa2-4007-a796-4b731ec3c01b", "historyId": "1eb3cbb8d34e36f8a7e7b481dfe3dadd", "testCaseId": "8bb7c9c5f504fbcb8f5703c0549a0a6d", "fullName": "testcases.test_work_attendance.TestAttend2#test_assert_attend_number", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_work_attendance"}, {"name": "subSuite", "value": "TestAttend2"}, {"name": "host", "value": "MuSen"}, {"name": "thread", "value": "10752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_work_attendance"}]}