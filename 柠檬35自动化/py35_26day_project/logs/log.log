2020-12-22 21:13:40,458 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-22 21:13:40,515 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-22 21:13:40,566 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-22 21:13:40,816 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-22 21:13:41,092 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-22 21:13:41,140 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-22 21:13:41,467 - [test_recharge.py-->line:68] - ERROR: 用例--【充值成功】---执行失败
2020-12-22 21:13:41,478 - [test_recharge.py-->line:69] - ERROR: 'ok' != 'OK'
- ok
+ OK
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: 'ok' != 'OK'
- ok
+ OK

2020-12-22 21:13:41,546 - [test_recharge.py-->line:68] - ERROR: 用例--【id错误】---执行失败
2020-12-22 21:13:41,547 - [test_recharge.py-->line:69] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-12-22 21:13:41,589 - [test_recharge.py-->line:68] - ERROR: 用例--【不输入id】---执行失败
2020-12-22 21:13:41,589 - [test_recharge.py-->line:69] - ERROR: 0 != 1
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-12-22 21:13:41,630 - [test_recharge.py-->line:68] - ERROR: 用例--【不输入金额】---执行失败
2020-12-22 21:13:41,630 - [test_recharge.py-->line:69] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:13:41,690 - [test_recharge.py-->line:68] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-22 21:13:41,691 - [test_recharge.py-->line:69] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:13:41,733 - [test_recharge.py-->line:68] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-22 21:13:41,734 - [test_recharge.py-->line:69] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:13:41,792 - [test_recharge.py-->line:68] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-22 21:13:41,792 - [test_recharge.py-->line:69] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-12-22 21:13:41,844 - [test_recharge.py-->line:68] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-22 21:13:41,844 - [test_recharge.py-->line:69] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-22 21:13:42,116 - [test_register.py-->line:47] - ERROR: 用例--【注册成功-带注册名】---执行失败
2020-12-22 21:13:42,116 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:13:42,372 - [test_register.py-->line:47] - ERROR: 用例--【成功-不带用户名】---执行失败
2020-12-22 21:13:42,372 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:13:42,413 - [test_register.py-->line:52] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:13:42,468 - [test_register.py-->line:52] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:13:42,525 - [test_register.py-->line:52] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:13:42,572 - [test_register.py-->line:52] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:13:42,851 - [test_register.py-->line:52] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:13:42,908 - [test_register.py-->line:52] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:13:42,962 - [test_register.py-->line:52] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:13:43,010 - [test_register.py-->line:52] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:13:43,053 - [test_register.py-->line:52] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:13:43,105 - [test_register.py-->line:52] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:13:43,356 - [test_register.py-->line:47] - ERROR: 用例--【不输入类型】---执行失败
2020-12-22 21:13:43,356 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:17,378 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-22 21:16:17,429 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-22 21:16:17,471 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-22 21:16:17,743 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-22 21:16:17,998 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-22 21:16:18,050 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-22 21:16:18,384 - [test_recharge.py-->line:74] - INFO: 用例--【充值成功】---执行通过
2020-12-22 21:16:18,431 - [test_recharge.py-->line:70] - ERROR: 用例--【id错误】---执行失败
2020-12-22 21:16:18,431 - [test_recharge.py-->line:71] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-12-22 21:16:18,473 - [test_recharge.py-->line:70] - ERROR: 用例--【不输入id】---执行失败
2020-12-22 21:16:18,474 - [test_recharge.py-->line:71] - ERROR: 0 != 1
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-12-22 21:16:18,534 - [test_recharge.py-->line:70] - ERROR: 用例--【不输入金额】---执行失败
2020-12-22 21:16:18,534 - [test_recharge.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:18,586 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-22 21:16:18,587 - [test_recharge.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:18,634 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-22 21:16:18,634 - [test_recharge.py-->line:71] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:18,695 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-22 21:16:18,701 - [test_recharge.py-->line:71] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-12-22 21:16:18,760 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-22 21:16:18,760 - [test_recharge.py-->line:71] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-22 21:16:19,063 - [test_register.py-->line:47] - ERROR: 用例--【注册成功-带注册名】---执行失败
2020-12-22 21:16:19,064 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:19,316 - [test_register.py-->line:47] - ERROR: 用例--【成功-不带用户名】---执行失败
2020-12-22 21:16:19,317 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:16:19,388 - [test_register.py-->line:52] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:16:19,438 - [test_register.py-->line:52] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:16:19,478 - [test_register.py-->line:52] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:16:19,520 - [test_register.py-->line:52] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:16:19,791 - [test_register.py-->line:52] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:16:19,838 - [test_register.py-->line:52] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:16:19,895 - [test_register.py-->line:52] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:16:19,946 - [test_register.py-->line:52] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:16:19,999 - [test_register.py-->line:52] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:16:20,057 - [test_register.py-->line:52] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:16:20,324 - [test_register.py-->line:47] - ERROR: 用例--【不输入类型】---执行失败
2020-12-22 21:16:20,325 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:21:27,077 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-22 21:21:27,130 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-22 21:21:27,169 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-22 21:21:27,420 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-22 21:21:27,692 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-22 21:21:27,745 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-22 21:21:28,061 - [test_recharge.py-->line:74] - INFO: 用例--【充值成功】---执行通过
2020-12-22 21:21:28,119 - [test_recharge.py-->line:74] - INFO: 用例--【id错误】---执行通过
2020-12-22 21:21:28,176 - [test_recharge.py-->line:70] - ERROR: 用例--【不输入金额】---执行失败
2020-12-22 21:21:28,177 - [test_recharge.py-->line:71] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-22 21:21:28,223 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-22 21:21:28,223 - [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:21:28,267 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-22 21:21:28,267 - [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:21:28,321 - [test_recharge.py-->line:74] - INFO: 用例--【充值金额非数字】---执行通过
2020-12-22 21:21:28,361 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-22 21:21:28,361 - [test_recharge.py-->line:71] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-22 21:21:28,626 - [test_register.py-->line:47] - ERROR: 用例--【注册成功-带注册名】---执行失败
2020-12-22 21:21:28,627 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:21:28,907 - [test_register.py-->line:47] - ERROR: 用例--【成功-不带用户名】---执行失败
2020-12-22 21:21:28,908 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:21:28,970 - [test_register.py-->line:52] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:21:29,025 - [test_register.py-->line:52] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:21:29,071 - [test_register.py-->line:52] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:21:29,124 - [test_register.py-->line:52] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:21:29,420 - [test_register.py-->line:52] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:21:29,472 - [test_register.py-->line:52] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:21:29,513 - [test_register.py-->line:52] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:21:29,560 - [test_register.py-->line:52] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:21:29,611 - [test_register.py-->line:52] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:21:29,664 - [test_register.py-->line:52] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:21:29,939 - [test_register.py-->line:47] - ERROR: 用例--【不输入类型】---执行失败
2020-12-22 21:21:29,939 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:25:35,230 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-22 21:25:35,283 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-22 21:25:35,321 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-22 21:25:35,570 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-22 21:25:35,857 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-22 21:25:35,908 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-22 21:25:36,234 - [test_recharge.py-->line:74] - INFO: 用例--【充值成功】---执行通过
2020-12-22 21:25:36,286 - [test_recharge.py-->line:74] - INFO: 用例--【id错误】---执行通过
2020-12-22 21:25:36,324 - [test_recharge.py-->line:74] - INFO: 用例--【不输入id】---执行通过
2020-12-22 21:25:36,379 - [test_recharge.py-->line:70] - ERROR: 用例--【不输入金额】---执行失败
2020-12-22 21:25:36,379 - [test_recharge.py-->line:71] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-22 21:25:36,434 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-22 21:25:36,434 - [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:25:36,479 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-22 21:25:36,479 - [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:25:36,519 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-22 21:25:36,519 - [test_recharge.py-->line:71] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-12-22 21:25:36,578 - [test_recharge.py-->line:70] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-22 21:25:36,578 - [test_recharge.py-->line:71] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 68, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-22 21:25:36,842 - [test_register.py-->line:47] - ERROR: 用例--【注册成功-带注册名】---执行失败
2020-12-22 21:25:36,842 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:25:37,107 - [test_register.py-->line:47] - ERROR: 用例--【成功-不带用户名】---执行失败
2020-12-22 21:25:37,107 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:25:37,152 - [test_register.py-->line:52] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:25:37,196 - [test_register.py-->line:52] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:25:37,233 - [test_register.py-->line:52] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:25:37,285 - [test_register.py-->line:52] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:25:37,633 - [test_register.py-->line:52] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:25:37,685 - [test_register.py-->line:52] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:25:37,730 - [test_register.py-->line:52] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:25:37,790 - [test_register.py-->line:52] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:25:37,839 - [test_register.py-->line:52] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:25:37,895 - [test_register.py-->line:52] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:25:38,162 - [test_register.py-->line:47] - ERROR: 用例--【不输入类型】---执行失败
2020-12-22 21:25:38,162 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_register.py", line 43, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-12-22 21:39:27,726 - [test_register.py-->line:56] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-22 21:39:27,986 - [test_register.py-->line:56] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-22 21:39:28,030 - [test_register.py-->line:56] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:39:28,088 - [test_register.py-->line:56] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:39:28,147 - [test_register.py-->line:56] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:39:28,205 - [test_register.py-->line:56] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:39:28,463 - [test_register.py-->line:56] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:39:28,504 - [test_register.py-->line:56] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:39:28,565 - [test_register.py-->line:56] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:39:28,625 - [test_register.py-->line:56] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:39:28,683 - [test_register.py-->line:56] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:39:28,743 - [test_register.py-->line:56] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:39:29,010 - [test_register.py-->line:56] - INFO: 用例--【不输入类型】---执行通过
2020-12-22 21:39:39,254 - [test_register.py-->line:56] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-22 21:39:39,516 - [test_register.py-->line:56] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-22 21:39:39,556 - [test_register.py-->line:56] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:39:39,596 - [test_register.py-->line:56] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:39:39,640 - [test_register.py-->line:56] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:39:39,694 - [test_register.py-->line:56] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:39:39,954 - [test_register.py-->line:56] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:39:39,995 - [test_register.py-->line:56] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:39:40,043 - [test_register.py-->line:56] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:39:40,105 - [test_register.py-->line:56] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:39:40,162 - [test_register.py-->line:56] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:39:40,215 - [test_register.py-->line:56] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:39:40,500 - [test_register.py-->line:56] - INFO: 用例--【不输入类型】---执行通过
2020-12-22 21:42:37,314 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-22 21:42:37,354 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-22 21:42:37,391 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-22 21:42:37,643 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-22 21:42:37,914 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-22 21:42:37,953 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-22 21:42:38,285 - [test_recharge.py-->line:73] - INFO: 用例--【充值成功】---执行通过
2020-12-22 21:42:38,327 - [test_recharge.py-->line:73] - INFO: 用例--【id错误】---执行通过
2020-12-22 21:42:38,373 - [test_recharge.py-->line:73] - INFO: 用例--【不输入id】---执行通过
2020-12-22 21:42:38,413 - [test_recharge.py-->line:69] - ERROR: 用例--【不输入金额】---执行失败
2020-12-22 21:42:38,413 - [test_recharge.py-->line:70] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-22 21:42:38,467 - [test_recharge.py-->line:69] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-22 21:42:38,468 - [test_recharge.py-->line:70] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:42:38,523 - [test_recharge.py-->line:69] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-22 21:42:38,524 - [test_recharge.py-->line:70] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-22 21:42:38,586 - [test_recharge.py-->line:69] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-22 21:42:38,586 - [test_recharge.py-->line:70] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-12-22 21:42:38,642 - [test_recharge.py-->line:69] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-22 21:42:38,642 - [test_recharge.py-->line:70] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_21day_project\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-22 21:42:38,934 - [test_register.py-->line:58] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-22 21:42:39,206 - [test_register.py-->line:58] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-22 21:42:39,258 - [test_register.py-->line:58] - INFO: 用例--【不输入手机号】---执行通过
2020-12-22 21:42:39,295 - [test_register.py-->line:58] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-22 21:42:39,340 - [test_register.py-->line:58] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-22 21:42:39,381 - [test_register.py-->line:58] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-22 21:42:39,636 - [test_register.py-->line:58] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-22 21:42:39,678 - [test_register.py-->line:58] - INFO: 用例--【密码7位】---执行通过
2020-12-22 21:42:39,714 - [test_register.py-->line:58] - INFO: 用例--【密码17位】---执行通过
2020-12-22 21:42:39,755 - [test_register.py-->line:58] - INFO: 用例--【不输入密码】---执行通过
2020-12-22 21:42:39,796 - [test_register.py-->line:58] - INFO: 用例--【注册名11位】---执行通过
2020-12-22 21:42:39,834 - [test_register.py-->line:58] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-22 21:42:40,102 - [test_register.py-->line:58] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 19:35:45,132 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 19:35:45,133 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 19:35:45,180 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 19:35:45,224 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 19:35:45,264 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 19:35:45,304 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 19:35:45,345 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 19:35:45,457 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 19:35:45,519 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 19:35:45,561 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 19:35:45,599 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 19:35:45,641 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 19:35:45,680 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 19:35:45,724 - [test_register.py-->line:56] - ERROR: 用例--【已注册过的手机号】---执行失败
2020-12-24 19:35:45,724 - [test_register.py-->line:57] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 19:35:45,781 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 19:35:45,820 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 19:35:45,869 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 19:35:45,925 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 19:35:45,974 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 19:35:46,027 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:04:17,083 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:04:17,083 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:04:17,139 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:04:17,194 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:04:17,250 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:04:17,290 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:04:17,341 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:04:17,450 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:04:17,498 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:04:17,535 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:04:17,595 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:04:17,638 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:04:17,687 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:04:17,748 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:04:17,797 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:04:17,846 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:04:17,896 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:04:17,938 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:04:17,999 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:04:18,063 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:05:42,682 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:05:42,683 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:05:42,724 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:05:42,779 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:05:42,832 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:05:42,875 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:05:42,916 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:05:43,029 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:05:43,087 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:05:43,148 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:05:43,194 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:05:43,242 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:05:43,298 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:05:43,352 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:05:43,412 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:05:43,458 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:05:43,511 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:05:43,574 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:05:43,643 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:05:43,704 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:05:54,351 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:05:54,353 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:05:54,421 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:05:54,481 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:05:54,538 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:05:54,599 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:05:54,660 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:05:54,827 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:05:54,917 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:05:54,977 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:05:55,050 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:05:55,107 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:05:55,177 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:05:55,240 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:05:55,304 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:05:55,371 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:05:55,425 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:05:55,480 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:05:55,530 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:05:55,612 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:08:15,099 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:08:15,100 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:08:15,142 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:08:15,182 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:08:15,237 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:08:15,274 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:08:15,323 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:08:15,446 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功】---执行通过
2020-12-24 20:08:15,501 - [test_recharge.py-->line:85] - INFO: 用例--【id错误】---执行通过
2020-12-24 20:08:15,542 - [test_recharge.py-->line:85] - INFO: 用例--【不输入id】---执行通过
2020-12-24 20:08:15,603 - [test_recharge.py-->line:81] - ERROR: 用例--【不输入金额】---执行失败
2020-12-24 20:08:15,603 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 20:08:15,644 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 20:08:15,644 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:08:15,698 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-24 20:08:15,698 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:08:15,747 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-24 20:08:15,747 - [test_recharge.py-->line:82] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-12-24 20:08:15,792 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-24 20:08:15,792 - [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:08:15,840 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:08:15,902 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:08:15,946 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:08:15,985 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:08:16,042 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:08:16,094 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:08:16,141 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:08:16,185 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:08:16,233 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:08:16,277 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:08:16,336 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:08:16,385 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:08:16,443 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:08:16,552 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现成功-整数】---执行失败
2020-12-24 20:08:16,552 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-12-24 20:08:16,607 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现成功-1位小数】---执行失败
2020-12-24 20:08:16,607 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-12-24 20:08:16,650 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现成功-2位小数】---执行失败
2020-12-24 20:08:16,650 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-12-24 20:08:16,692 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现成功-50万】---执行失败
2020-12-24 20:08:16,692 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-12-24 20:08:16,754 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 20:08:16,791 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 20:08:16,836 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 20:08:16,837 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 20:08:16,887 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 20:08:16,888 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:08:16,938 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 20:08:16,939 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 20:08:16,978 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 20:08:16,978 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:08:17,017 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 20:08:17,017 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:08:17,064 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 20:10:53,464 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:10:53,465 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:10:53,512 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:10:53,552 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:10:53,605 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:10:53,670 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:10:53,722 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:10:53,845 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功】---执行通过
2020-12-24 20:10:53,898 - [test_recharge.py-->line:85] - INFO: 用例--【id错误】---执行通过
2020-12-24 20:10:53,957 - [test_recharge.py-->line:85] - INFO: 用例--【不输入id】---执行通过
2020-12-24 20:10:53,999 - [test_recharge.py-->line:81] - ERROR: 用例--【不输入金额】---执行失败
2020-12-24 20:10:54,002 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 20:10:54,058 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 20:10:54,059 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:10:54,115 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为500001】---执行失败
2020-12-24 20:10:54,115 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:10:54,178 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额非数字】---执行失败
2020-12-24 20:10:54,178 - [test_recharge.py-->line:82] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-12-24 20:10:54,239 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额小数点3位】---执行失败
2020-12-24 20:10:54,239 - [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:10:54,295 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:10:54,337 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:10:54,394 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:10:54,450 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:10:54,504 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:10:54,559 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:10:54,602 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:10:54,649 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:10:54,700 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:10:54,751 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:10:54,808 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:10:54,861 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:10:54,908 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:10:55,020 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 20:10:55,067 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 20:10:55,110 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 20:10:55,163 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现成功-50万】---执行失败
2020-12-24 20:10:55,164 - [test_withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-12-24 20:10:55,219 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 20:10:55,275 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 20:10:55,333 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 20:10:55,333 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 20:10:55,386 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 20:10:55,386 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:10:55,427 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 20:10:55,428 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 20:10:55,477 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 20:10:55,477 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:10:55,525 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 20:10:55,525 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:10:55,582 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 20:16:32,349 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 20:16:32,350 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 20:16:32,410 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 20:16:32,467 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 20:16:32,542 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 20:16:32,596 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 20:16:32,638 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 20:16:32,732 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-24 20:16:32,798 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-24 20:16:32,858 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-24 20:16:32,921 - [test_recharge.py-->line:85] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-24 20:16:32,977 - [test_recharge.py-->line:81] - ERROR: 用例--【会员id为空】---执行失败
2020-12-24 20:16:32,978 - [test_recharge.py-->line:82] - ERROR: '会员id为空' != '用户id为空'
- 会员id为空
+ 用户id为空
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '会员id为空' != '用户id为空'
- 会员id为空
+ 用户id为空

2020-12-24 20:16:33,030 - [test_recharge.py-->line:81] - ERROR: 用例--【会员id为小数】---执行失败
2020-12-24 20:16:33,030 - [test_recharge.py-->line:82] - ERROR: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常

2020-12-24 20:16:33,093 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 20:16:33,094 - [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 20:16:33,159 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 20:16:33,160 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:16:33,220 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 20:16:33,221 - [test_recharge.py-->line:82] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 20:16:33,279 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 20:16:33,280 - [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:16:33,341 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 20:16:33,341 - [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 20:16:33,395 - [test_recharge.py-->line:81] - ERROR: 用例--【充值金额-非数字】---执行失败
2020-12-24 20:16:33,396 - [test_recharge.py-->line:82] - ERROR: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常

2020-12-24 20:16:33,454 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 20:16:33,498 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 20:16:33,551 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 20:16:33,600 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 20:16:33,658 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 20:16:33,719 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 20:16:33,791 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 20:16:33,860 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 20:16:33,914 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 20:16:33,970 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 20:16:34,021 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 20:16:34,059 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 20:16:34,115 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 20:16:34,212 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 20:16:34,263 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 20:16:34,327 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 20:16:34,383 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 20:16:34,438 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 20:16:34,484 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 20:16:34,547 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 20:16:34,548 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 20:16:34,597 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 20:16:34,597 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:16:34,669 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 20:16:34,670 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 20:16:34,733 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 20:16:34,733 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 20:16:34,796 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 20:16:34,796 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 20:16:34,838 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 21:55:06,869 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 21:55:06,870 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 21:55:07,931 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 21:55:07,988 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 21:55:08,027 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 21:55:09,073 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 21:55:09,129 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 21:55:09,570 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-24 21:55:09,733 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-24 21:55:09,896 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-24 21:55:10,057 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-24 21:55:10,231 - [test_recharge.py-->line:103] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:55:10,383 - [test_recharge.py-->line:103] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:55:10,783 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 21:55:10,783 - [test_recharge.py-->line:100] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 92, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:55:10,931 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 21:55:10,931 - [test_recharge.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:55:11,098 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 21:55:11,099 - [test_recharge.py-->line:100] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 92, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 21:55:11,266 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 21:55:11,266 - [test_recharge.py-->line:100] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:55:11,433 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 21:55:11,433 - [test_recharge.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:55:11,585 - [test_recharge.py-->line:103] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-24 21:55:11,637 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 21:55:11,701 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 21:55:11,740 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 21:55:11,792 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 21:55:11,843 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 21:55:11,892 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 21:55:11,944 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 21:55:12,234 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 21:55:12,272 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 21:55:13,323 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 21:55:13,373 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 21:55:13,421 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 21:55:13,470 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 21:55:13,565 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 21:55:13,632 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 21:55:13,694 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 21:55:13,766 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 21:55:13,826 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:55:13,884 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:55:13,932 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 21:55:13,933 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:55:13,996 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 21:55:13,996 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:55:14,036 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 21:55:14,037 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 21:55:14,096 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 21:55:14,096 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:55:14,146 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 21:55:14,146 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:55:14,185 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 21:55:21,853 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 21:55:21,854 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 21:55:21,914 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 21:55:21,968 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 21:55:22,008 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 21:55:22,052 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 21:55:22,106 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 21:55:22,299 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-24 21:55:22,438 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-24 21:55:22,584 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-24 21:55:22,712 - [test_recharge.py-->line:103] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-24 21:55:22,837 - [test_recharge.py-->line:103] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:55:22,977 - [test_recharge.py-->line:103] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:55:23,117 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 21:55:23,117 - [test_recharge.py-->line:100] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 92, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:55:23,238 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 21:55:23,238 - [test_recharge.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:55:23,360 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 21:55:23,360 - [test_recharge.py-->line:100] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 92, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 21:55:23,481 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 21:55:23,482 - [test_recharge.py-->line:100] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:55:23,611 - [test_recharge.py-->line:99] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 21:55:23,612 - [test_recharge.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 93, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:55:23,736 - [test_recharge.py-->line:103] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-24 21:55:23,805 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 21:55:23,859 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 21:55:23,918 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 21:55:23,961 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 21:55:24,007 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 21:55:24,059 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 21:55:24,102 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 21:55:24,161 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 21:55:24,217 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 21:55:24,270 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 21:55:24,310 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 21:55:24,351 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 21:55:24,407 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 21:55:24,516 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 21:55:24,575 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 21:55:24,639 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 21:55:24,699 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 21:55:24,743 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:55:24,781 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:55:24,842 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 21:55:24,842 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:55:24,896 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 21:55:24,896 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:55:24,951 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 21:55:24,951 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 21:55:25,002 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 21:55:25,002 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:55:25,046 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 21:55:25,046 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:55:25,109 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 21:57:42,864 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 21:57:42,865 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 21:57:42,905 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 21:57:42,957 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 21:57:42,995 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 21:57:43,047 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 21:57:43,100 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 21:57:44,323 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 21:57:44,324 - [test_recharge.py-->line:102] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:57:44,473 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 21:57:44,473 - [test_recharge.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:57:44,630 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 21:57:44,630 - [test_recharge.py-->line:102] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 21:57:44,789 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 21:57:44,789 - [test_recharge.py-->line:102] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:57:44,950 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 21:57:44,951 - [test_recharge.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:57:45,162 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 21:57:45,208 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 21:57:45,256 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 21:57:45,307 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 21:57:45,365 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 21:57:45,431 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 21:57:45,474 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 21:57:45,513 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 21:57:45,578 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 21:57:45,629 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 21:57:45,703 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 21:57:45,749 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 21:57:45,805 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 21:57:45,915 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 21:57:45,999 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 21:57:46,045 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 21:57:46,109 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 21:57:46,157 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:57:46,205 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:57:46,263 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 21:57:46,264 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:57:46,339 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 21:57:46,340 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:57:46,382 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 21:57:46,383 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 21:57:46,430 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 21:57:46,431 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:57:46,480 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 21:57:46,481 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:57:46,551 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 21:58:54,189 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 21:58:54,190 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 21:58:54,246 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 21:58:54,304 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 21:58:54,355 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 21:58:54,407 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 21:58:54,458 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 21:58:54,673 - [test_recharge.py-->line:105] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-24 21:58:54,812 - [test_recharge.py-->line:101] - ERROR: 用例--【充值成功-1位小数】---执行失败
2020-12-24 21:58:54,812 - [test_recharge.py-->line:102] - ERROR: Decimal('600.10') != 600.1
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 97, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.10') != 600.1
2020-12-24 21:58:54,977 - [test_recharge.py-->line:101] - ERROR: 用例--【充值成功-2位小数】---执行失败
2020-12-24 21:58:54,977 - [test_recharge.py-->line:102] - ERROR: Decimal('600.22') != 600.22
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 97, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.22') != 600.22
2020-12-24 21:58:55,133 - [test_recharge.py-->line:105] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-24 21:58:55,287 - [test_recharge.py-->line:101] - ERROR: 用例--【会员id为空】---执行失败
2020-12-24 21:58:55,287 - [test_recharge.py-->line:102] - ERROR: Decimal('0.00') != 600
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 97, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600
2020-12-24 21:58:55,437 - [test_recharge.py-->line:101] - ERROR: 用例--【会员id为小数】---执行失败
2020-12-24 21:58:55,437 - [test_recharge.py-->line:102] - ERROR: Decimal('0.00') != 600
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 97, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600
2020-12-24 21:58:55,590 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 21:58:55,590 - [test_recharge.py-->line:102] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:58:55,746 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 21:58:55,747 - [test_recharge.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:58:55,899 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 21:58:55,899 - [test_recharge.py-->line:102] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 21:58:56,035 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 21:58:56,035 - [test_recharge.py-->line:102] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:58:56,174 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 21:58:56,174 - [test_recharge.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 21:58:56,331 - [test_recharge.py-->line:101] - ERROR: 用例--【充值金额-非数字】---执行失败
2020-12-24 21:58:56,331 - [test_recharge.py-->line:102] - ERROR: Decimal('0.00') != '5万'
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 97, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != '5万'
2020-12-24 21:58:56,378 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 21:58:56,431 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 21:58:56,489 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 21:58:56,544 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 21:58:56,584 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 21:58:56,619 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 21:58:56,666 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 21:58:56,711 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 21:58:56,770 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 21:58:56,808 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 21:58:56,866 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 21:58:56,932 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 21:58:56,976 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 21:58:57,097 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 21:58:57,162 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 21:58:57,206 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 21:58:57,266 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 21:58:57,313 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 21:58:57,373 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 21:58:57,432 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 21:58:57,432 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 21:58:57,473 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 21:58:57,473 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:58:57,527 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 21:58:57,528 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 21:58:57,571 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 21:58:57,572 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 21:58:57,627 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 21:58:57,627 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 21:58:57,685 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-24 22:03:48,247 - [test_login.py-->line:48] - ERROR: 用例--【登录成功】---执行失败
2020-12-24 22:03:48,247 - [test_login.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 45, in test_login
    self.assertDictIn(expected,res)
  File "C:\project\python_35\py35_23day_project\testcases\test_login.py", line 61, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-24 22:03:48,288 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-24 22:03:48,347 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-24 22:03:48,399 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-24 22:03:48,443 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-24 22:03:48,487 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-24 22:03:48,664 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-24 22:03:48,798 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-24 22:03:48,939 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-24 22:03:49,060 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-24 22:03:49,177 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 22:03:49,303 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 22:03:49,431 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-24 22:03:49,431 - [test_recharge.py-->line:106] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 22:03:49,561 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-24 22:03:49,561 - [test_recharge.py-->line:106] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 22:03:49,693 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-24 22:03:49,693 - [test_recharge.py-->line:106] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-24 22:03:49,827 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-24 22:03:49,828 - [test_recharge.py-->line:106] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 22:03:49,952 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-24 22:03:49,952 - [test_recharge.py-->line:106] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-24 22:03:50,077 - [test_recharge.py-->line:109] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-24 22:03:50,129 - [test_register.py-->line:61] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-24 22:03:50,185 - [test_register.py-->line:61] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-24 22:03:50,226 - [test_register.py-->line:61] - INFO: 用例--【不输入手机号】---执行通过
2020-12-24 22:03:50,265 - [test_register.py-->line:61] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-24 22:03:50,305 - [test_register.py-->line:61] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-24 22:03:50,360 - [test_register.py-->line:61] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-24 22:03:50,403 - [test_register.py-->line:61] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-24 22:03:50,459 - [test_register.py-->line:61] - INFO: 用例--【密码7位】---执行通过
2020-12-24 22:03:50,512 - [test_register.py-->line:61] - INFO: 用例--【密码17位】---执行通过
2020-12-24 22:03:50,566 - [test_register.py-->line:61] - INFO: 用例--【不输入密码】---执行通过
2020-12-24 22:03:50,610 - [test_register.py-->line:61] - INFO: 用例--【注册名11位】---执行通过
2020-12-24 22:03:50,680 - [test_register.py-->line:61] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-24 22:03:50,736 - [test_register.py-->line:61] - INFO: 用例--【不输入类型】---执行通过
2020-12-24 22:03:50,851 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-24 22:03:50,909 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-24 22:03:50,964 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-24 22:03:51,011 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-24 22:03:51,064 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-24 22:03:51,105 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-24 22:03:51,147 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-24 22:03:51,147 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-24 22:03:51,203 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-24 22:03:51,203 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 22:03:51,260 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-24 22:03:51,261 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-24 22:03:51,305 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-24 22:03:51,305 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-24 22:03:51,349 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-24 22:03:51,350 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_23day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-24 22:03:51,403 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 09:44:00,331 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-26 09:44:00,431 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-26 09:44:00,510 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-26 09:44:00,610 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-26 09:44:00,688 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-26 09:44:00,769 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-26 09:46:29,767 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 09:46:29,841 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-26 09:46:29,906 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-26 09:46:29,985 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 09:46:30,035 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 09:46:30,097 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 09:46:30,172 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 09:46:30,172 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-26 09:46:30,246 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 09:46:30,247 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:46:30,312 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 09:46:30,312 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-26 09:46:30,390 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 09:46:30,390 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-26 09:46:30,452 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 09:46:30,452 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:46:30,527 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 09:48:10,024 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-26 09:48:10,090 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-26 09:48:10,158 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-26 09:48:10,233 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-26 09:48:10,303 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-26 09:48:10,376 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-26 09:48:11,386 - [test_register.py-->line:65] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-26 09:48:11,504 - [test_register.py-->line:65] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-26 09:48:11,619 - [test_register.py-->line:65] - INFO: 用例--【不输入手机号】---执行通过
2020-12-26 09:48:11,737 - [test_register.py-->line:65] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-26 09:48:11,858 - [test_register.py-->line:65] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-26 09:48:11,971 - [test_register.py-->line:65] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-26 09:48:12,085 - [test_register.py-->line:65] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-26 09:48:12,204 - [test_register.py-->line:65] - INFO: 用例--【密码7位】---执行通过
2020-12-26 09:48:12,332 - [test_register.py-->line:65] - INFO: 用例--【密码17位】---执行通过
2020-12-26 09:48:12,454 - [test_register.py-->line:65] - INFO: 用例--【不输入密码】---执行通过
2020-12-26 09:48:12,577 - [test_register.py-->line:65] - INFO: 用例--【注册名11位】---执行通过
2020-12-26 09:48:12,706 - [test_register.py-->line:65] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-26 09:48:12,851 - [test_register.py-->line:65] - INFO: 用例--【不输入类型】---执行通过
2020-12-26 09:48:12,998 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 09:48:13,065 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-26 09:48:13,148 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-26 09:48:13,199 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 09:48:13,275 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 09:48:13,337 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 09:48:13,405 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 09:48:13,407 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-26 09:48:13,493 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 09:48:13,493 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:48:13,558 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 09:48:13,559 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-26 09:48:13,627 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 09:48:13,627 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-26 09:48:13,689 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 09:48:13,689 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:48:13,746 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 09:52:49,921 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-26 09:52:49,984 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-26 09:52:50,038 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-26 09:52:50,109 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-26 09:52:50,186 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-26 09:52:50,256 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-26 09:52:51,170 - [test_register.py-->line:72] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-26 09:52:51,305 - [test_register.py-->line:72] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-26 09:52:51,414 - [test_register.py-->line:72] - INFO: 用例--【不输入手机号】---执行通过
2020-12-26 09:52:51,543 - [test_register.py-->line:72] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-26 09:52:51,671 - [test_register.py-->line:72] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-26 09:52:51,790 - [test_register.py-->line:72] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-26 09:52:51,910 - [test_register.py-->line:72] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-26 09:52:52,037 - [test_register.py-->line:72] - INFO: 用例--【密码7位】---执行通过
2020-12-26 09:52:52,150 - [test_register.py-->line:72] - INFO: 用例--【密码17位】---执行通过
2020-12-26 09:52:52,271 - [test_register.py-->line:72] - INFO: 用例--【不输入密码】---执行通过
2020-12-26 09:52:52,404 - [test_register.py-->line:72] - INFO: 用例--【注册名11位】---执行通过
2020-12-26 09:52:52,516 - [test_register.py-->line:72] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-26 09:52:52,654 - [test_register.py-->line:72] - INFO: 用例--【不输入类型】---执行通过
2020-12-26 09:52:52,773 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 09:52:52,837 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-26 09:52:52,906 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-26 09:52:52,977 - [test_withdraw.py-->line:82] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 09:52:53,038 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 09:52:53,103 - [test_withdraw.py-->line:82] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 09:52:53,178 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 09:52:53,178 - [test_withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 75, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-26 09:52:53,243 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 09:52:53,243 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:52:53,312 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 09:52:53,312 - [test_withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-26 09:52:53,369 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 09:52:53,370 - [test_withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-26 09:52:53,424 - [test_withdraw.py-->line:78] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 09:52:53,425 - [test_withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 09:52:53,502 - [test_withdraw.py-->line:82] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 10:00:59,497 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-26 10:00:59,699 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-26 10:00:59,923 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-26 10:01:00,136 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-26 10:01:00,334 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 10:01:00,538 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 10:01:00,747 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-26 10:01:00,748 - [test_recharge.py-->line:106] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-12-26 10:01:01,119 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-26 10:01:01,120 - [test_recharge.py-->line:106] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-12-26 10:01:01,404 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-26 10:01:01,404 - [test_recharge.py-->line:106] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-12-26 10:01:01,661 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-26 10:01:01,662 - [test_recharge.py-->line:106] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-12-26 10:01:01,994 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-26 10:01:01,994 - [test_recharge.py-->line:106] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-12-26 10:01:02,264 - [test_recharge.py-->line:109] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-26 10:06:29,958 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 10:06:29,958 - [test_withdraw.py-->line:103] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-12-26 10:06:30,160 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 10:06:30,161 - [test_withdraw.py-->line:103] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:06:30,364 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 10:06:30,365 - [test_withdraw.py-->line:103] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-12-26 10:06:30,581 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 10:06:30,581 - [test_withdraw.py-->line:103] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-12-26 10:06:30,791 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 10:06:30,791 - [test_withdraw.py-->line:103] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:07:17,899 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 10:07:18,077 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现成功-1位小数】---执行失败
2020-12-26 10:07:18,077 - [test_withdraw.py-->line:103] - ERROR:  :: Decimal('600.10') != 600.1
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.10') != 600.1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 96, in test_withdraw
    self.assertEqual(start_amount-end_amount,params['amount'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600.10') != 600.1
2020-12-26 10:07:18,253 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现成功-2位小数】---执行失败
2020-12-26 10:07:18,253 - [test_withdraw.py-->line:103] - ERROR:  :: Decimal('600.22') != 600.22
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.22') != 600.22

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 96, in test_withdraw
    self.assertEqual(start_amount-end_amount,params['amount'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600.22') != 600.22
2020-12-26 10:07:18,427 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 10:07:18,605 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 10:07:18,778 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 10:07:18,942 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 10:07:18,942 - [test_withdraw.py-->line:103] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-12-26 10:07:19,096 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 10:07:19,096 - [test_withdraw.py-->line:103] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:07:19,273 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 10:07:19,273 - [test_withdraw.py-->line:103] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-12-26 10:07:19,450 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 10:07:19,450 - [test_withdraw.py-->line:103] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-12-26 10:07:19,629 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 10:07:19,629 - [test_withdraw.py-->line:103] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 93, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:07:19,805 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 10:09:04,238 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 10:09:04,415 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-26 10:09:04,622 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-26 10:09:04,806 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 10:09:04,991 - [test_withdraw.py-->line:105] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 10:09:05,165 - [test_withdraw.py-->line:105] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 10:09:05,356 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 10:09:05,356 - [test_withdraw.py-->line:102] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 91, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-12-26 10:09:05,525 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 10:09:05,525 - [test_withdraw.py-->line:102] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:09:05,687 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 10:09:05,687 - [test_withdraw.py-->line:102] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-12-26 10:09:05,866 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 10:09:05,867 - [test_withdraw.py-->line:102] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-12-26 10:09:06,061 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 10:09:06,061 - [test_withdraw.py-->line:102] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-12-26 10:09:06,231 - [test_withdraw.py-->line:105] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-26 10:09:19,193 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-26 10:09:19,271 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-26 10:09:19,351 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-26 10:09:19,417 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-26 10:09:19,480 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-26 10:09:19,547 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-26 10:09:19,796 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-26 10:09:19,989 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-26 10:09:20,168 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-26 10:09:20,341 - [test_recharge.py-->line:109] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-26 10:09:20,517 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 10:09:20,683 - [test_recharge.py-->line:109] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 10:09:20,858 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-26 10:09:20,858 - [test_recharge.py-->line:106] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-26 10:09:21,043 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-26 10:09:21,043 - [test_recharge.py-->line:106] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-26 10:09:21,208 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-26 10:09:21,209 - [test_recharge.py-->line:106] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 94, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-26 10:09:21,384 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-26 10:09:21,388 - [test_recharge.py-->line:106] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-26 10:09:21,566 - [test_recharge.py-->line:105] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-26 10:09:21,567 - [test_recharge.py-->line:106] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_recharge.py", line 95, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-26 10:09:21,740 - [test_recharge.py-->line:109] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-26 10:09:21,859 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-26 10:09:21,994 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-26 10:09:22,114 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-26 10:09:22,238 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-26 10:09:22,367 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-26 10:09:22,495 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-26 10:09:22,632 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-26 10:09:22,752 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-26 10:09:22,869 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-26 10:09:23,006 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-26 10:09:23,129 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-26 10:09:23,270 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-26 10:09:23,398 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-26 10:09:23,645 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-26 10:09:23,825 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-26 10:09:24,000 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-26 10:09:24,177 - [test_withdraw.py-->line:105] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-26 10:09:24,335 - [test_withdraw.py-->line:105] - INFO: 用例--【会员id为空】---执行通过
2020-12-26 10:09:24,493 - [test_withdraw.py-->line:105] - INFO: 用例--【会员id为小数】---执行通过
2020-12-26 10:09:24,674 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-26 10:09:24,675 - [test_withdraw.py-->line:102] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 91, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-26 10:09:24,849 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-26 10:09:24,849 - [test_withdraw.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 10:09:25,003 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-26 10:09:25,004 - [test_withdraw.py-->line:102] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-26 10:09:25,181 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-26 10:09:25,181 - [test_withdraw.py-->line:102] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-26 10:09:25,360 - [test_withdraw.py-->line:101] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-26 10:09:25,360 - [test_withdraw.py-->line:102] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-26 10:09:25,538 - [test_withdraw.py-->line:105] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-28 14:21:08,747 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-28 14:21:08,826 - [test_register.py-->line:71] - ERROR: 用例--【成功-不带用户名】---执行失败
2020-12-28 14:21:08,826 - [test_register.py-->line:72] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_register.py", line 67, in test_register
    self.assertEqual(1, count)
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-12-28 14:21:08,901 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-28 14:21:08,989 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-28 14:21:09,063 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-28 14:21:09,145 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-28 14:21:09,236 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-28 14:21:09,312 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-28 14:21:09,383 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-28 14:21:09,469 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-28 14:21:09,557 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-28 14:21:09,629 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-28 14:21:09,716 - [test_register.py-->line:71] - ERROR: 用例--【不输入类型】---执行失败
2020-12-28 14:21:09,716 - [test_register.py-->line:72] - ERROR:  :: 1 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_24day_project\testcases\test_register.py", line 67, in test_register
    self.assertEqual(1, count)
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2020-12-28 14:22:52,424 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-28 14:22:52,521 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-28 14:22:52,599 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-28 14:22:52,682 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-28 14:22:52,774 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-28 14:22:52,854 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-28 14:22:52,957 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-28 14:22:53,048 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-28 14:22:53,125 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-28 14:22:53,202 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-28 14:22:53,281 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-28 14:22:53,370 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-28 14:22:53,455 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-29 21:23:26,248 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-29 21:23:26,370 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-29 21:23:26,510 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-29 21:23:26,660 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-29 21:23:26,788 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:23:26,920 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:23:27,058 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-29 21:23:27,058 - [test_recharge.py-->line:110] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-12-29 21:23:27,362 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-29 21:23:27,362 - [test_recharge.py-->line:110] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-12-29 21:23:27,582 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-29 21:23:27,582 - [test_recharge.py-->line:110] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-12-29 21:23:27,791 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-29 21:23:27,792 - [test_recharge.py-->line:110] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-12-29 21:23:28,024 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-29 21:23:28,025 - [test_recharge.py-->line:110] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-12-29 21:23:28,246 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-29 21:27:37,460 - [test_login.py-->line:53] - INFO: 用例--【登录成功】---执行通过
2020-12-29 21:27:37,522 - [test_login.py-->line:53] - INFO: 用例--【手机号为空】---执行通过
2020-12-29 21:27:37,572 - [test_login.py-->line:53] - INFO: 用例--【密码为空】---执行通过
2020-12-29 21:27:37,642 - [test_login.py-->line:53] - INFO: 用例--【手机号未注册】---执行通过
2020-12-29 21:27:37,716 - [test_login.py-->line:53] - INFO: 用例--【密码错误】---执行通过
2020-12-29 21:27:37,771 - [test_login.py-->line:53] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-29 21:30:28,285 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-29 21:30:30,896 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-29 21:30:31,042 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-29 21:30:31,178 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-29 21:30:31,322 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:30:31,463 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:30:31,592 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-29 21:30:31,593 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:30:31,741 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-29 21:30:31,743 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:30:31,907 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-29 21:30:31,907 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-29 21:30:32,266 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-29 21:30:32,266 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:30:32,840 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-29 21:30:32,840 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:30:33,196 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-29 21:30:33,327 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-29 21:30:33,454 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-29 21:30:33,799 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-29 21:30:33,902 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-29 21:30:34,032 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-29 21:30:34,146 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-29 21:30:34,506 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-29 21:30:34,623 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-29 21:30:34,739 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-29 21:30:34,851 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-29 21:30:34,965 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-29 21:30:35,080 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-29 21:30:36,184 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-29 21:30:36,394 - [test_withdraw.py-->line:103] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-29 21:30:36,553 - [test_withdraw.py-->line:103] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-29 21:30:36,701 - [test_withdraw.py-->line:103] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-29 21:30:36,860 - [test_withdraw.py-->line:103] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-29 21:30:37,017 - [test_withdraw.py-->line:103] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:30:37,170 - [test_withdraw.py-->line:103] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:30:37,347 - [test_withdraw.py-->line:99] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-29 21:30:37,347 - [test_withdraw.py-->line:100] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 91, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:30:38,741 - [test_withdraw.py-->line:99] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-29 21:30:38,741 - [test_withdraw.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:30:38,883 - [test_withdraw.py-->line:99] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-29 21:30:38,883 - [test_withdraw.py-->line:100] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-29 21:30:39,051 - [test_withdraw.py-->line:99] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-29 21:30:39,051 - [test_withdraw.py-->line:100] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:30:39,194 - [test_withdraw.py-->line:99] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-29 21:30:39,194 - [test_withdraw.py-->line:100] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 92, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:30:39,596 - [test_withdraw.py-->line:103] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-29 21:43:10,054 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-29 21:43:10,108 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-29 21:43:10,171 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-29 21:43:10,219 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-29 21:43:10,267 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-29 21:43:10,485 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-29 21:43:10,640 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-29 21:43:10,808 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-29 21:43:10,960 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-29 21:43:11,118 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:43:11,280 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:43:11,440 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-29 21:43:11,441 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:43:11,602 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-29 21:43:11,602 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:43:11,774 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-29 21:43:11,774 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-29 21:43:11,922 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-29 21:43:11,922 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:43:12,100 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-29 21:43:12,101 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:43:12,277 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-29 21:43:12,398 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-29 21:43:12,501 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-29 21:43:12,610 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-29 21:43:12,703 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-29 21:43:12,813 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-29 21:43:12,925 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-29 21:43:13,038 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-29 21:43:13,135 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-29 21:43:13,233 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-29 21:43:13,342 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-29 21:43:13,438 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-29 21:43:13,556 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-29 21:43:13,684 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-29 21:43:13,917 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-29 21:43:14,076 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-29 21:43:14,243 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-29 21:43:14,416 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-29 21:43:14,564 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:43:14,738 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:43:14,895 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-29 21:43:14,896 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:43:15,042 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-29 21:43:15,042 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:43:15,215 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-29 21:43:15,215 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-29 21:43:15,368 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-29 21:43:15,368 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:43:15,515 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-29 21:43:15,515 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:43:15,677 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-29 21:46:46,819 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-29 21:46:46,881 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-29 21:46:46,938 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-29 21:46:47,023 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-29 21:46:47,084 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-29 21:46:47,302 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-29 21:46:47,477 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-29 21:46:47,631 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-29 21:46:47,801 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-29 21:46:47,959 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:46:48,106 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:46:48,259 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-29 21:46:48,260 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:46:48,424 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-29 21:46:48,425 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:46:48,571 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-29 21:46:48,572 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-29 21:46:48,715 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-29 21:46:48,716 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:46:48,865 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-29 21:46:48,865 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:46:49,030 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-29 21:46:49,147 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-29 21:46:49,260 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-29 21:46:49,371 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-29 21:46:49,479 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-29 21:46:49,588 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-29 21:46:49,697 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-29 21:46:49,797 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-29 21:46:49,924 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-29 21:46:50,036 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-29 21:46:50,155 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-29 21:46:50,287 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-29 21:46:50,402 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-29 21:46:50,519 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-29 21:46:50,694 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-29 21:46:50,835 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-29 21:46:50,953 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-29 21:46:51,086 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-29 21:46:51,214 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:46:51,344 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:46:51,479 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-29 21:46:51,479 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:46:51,608 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-29 21:46:51,609 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:46:51,731 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-29 21:46:51,731 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-29 21:46:51,848 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-29 21:46:51,848 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:46:51,979 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-29 21:46:51,980 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:46:52,118 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-29 21:48:39,528 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-29 21:48:39,572 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-29 21:48:39,623 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-29 21:48:39,681 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-29 21:48:39,726 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-29 21:48:39,770 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-29 21:48:39,959 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-29 21:48:40,104 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-29 21:48:40,261 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-29 21:48:40,422 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-29 21:48:40,580 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:48:40,724 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:48:40,883 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-29 21:48:40,883 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:48:41,035 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-29 21:48:41,035 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:48:41,189 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-29 21:48:41,189 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-29 21:48:41,338 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-29 21:48:41,338 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:48:41,496 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-29 21:48:41,496 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-29 21:48:41,666 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-29 21:48:41,783 - [test_register.py-->line:76] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-29 21:48:41,908 - [test_register.py-->line:76] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-29 21:48:42,011 - [test_register.py-->line:76] - INFO: 用例--【不输入手机号】---执行通过
2020-12-29 21:48:42,124 - [test_register.py-->line:76] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-29 21:48:42,215 - [test_register.py-->line:76] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-29 21:48:42,326 - [test_register.py-->line:76] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-29 21:48:42,433 - [test_register.py-->line:76] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-29 21:48:42,548 - [test_register.py-->line:76] - INFO: 用例--【密码7位】---执行通过
2020-12-29 21:48:42,655 - [test_register.py-->line:76] - INFO: 用例--【密码17位】---执行通过
2020-12-29 21:48:42,753 - [test_register.py-->line:76] - INFO: 用例--【不输入密码】---执行通过
2020-12-29 21:48:42,841 - [test_register.py-->line:76] - INFO: 用例--【注册名11位】---执行通过
2020-12-29 21:48:42,944 - [test_register.py-->line:76] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-29 21:48:43,059 - [test_register.py-->line:76] - INFO: 用例--【不输入类型】---执行通过
2020-12-29 21:48:43,243 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-29 21:48:43,371 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-29 21:48:43,497 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-29 21:48:43,624 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-29 21:48:43,746 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-29 21:48:43,892 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-29 21:48:44,023 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-29 21:48:44,024 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-29 21:48:44,176 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-29 21:48:44,176 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:48:44,297 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-29 21:48:44,297 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-29 21:48:44,438 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-29 21:48:44,438 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-29 21:48:44,557 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-29 21:48:44,558 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_25day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-29 21:48:44,696 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-31 19:34:53,909 - [test_login.py-->line:51] - ERROR: 用例--【登录成功】---执行失败
2020-12-31 19:34:53,909 - [test_login.py-->line:52] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_login.py", line 48, in test_login
    self.assertDictIn(expected, res)
  File "C:\project\python_35\py35_26day_project\testcases\test_login.py", line 64, in assertDictIn
    raise AssertionError("{} not in {}".format(expected, res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-12-31 19:34:53,949 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 19:34:53,989 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 19:34:54,034 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 19:34:54,092 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 19:34:54,131 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 19:34:54,306 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 19:34:54,409 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 19:34:54,510 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 19:34:54,610 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 19:34:54,719 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 19:34:54,814 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 19:34:54,926 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 19:34:55,038 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 19:34:55,144 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 19:34:55,242 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 19:34:55,349 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 19:34:55,455 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 19:34:55,579 - [test_register.py-->line:77] - INFO: 用例--【不输入类型】---执行通过
2020-12-31 19:37:31,309 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-31 19:37:31,362 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 19:37:31,405 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 19:37:31,462 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 19:37:31,512 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 19:37:31,566 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 19:37:31,781 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-31 19:37:31,944 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-31 19:37:32,114 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-31 19:37:32,295 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-31 19:37:32,460 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 19:37:32,610 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 19:37:32,764 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-31 19:37:32,764 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 19:37:32,928 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-31 19:37:32,928 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 19:37:33,090 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-31 19:37:33,090 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-31 19:37:33,260 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-31 19:37:33,260 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 19:37:33,407 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-31 19:37:33,407 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 19:37:33,562 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-31 19:37:33,682 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 19:37:33,796 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 19:37:33,888 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 19:37:33,987 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 19:37:34,081 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 19:37:34,184 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 19:37:34,298 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 19:37:34,400 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 19:37:34,494 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 19:37:34,596 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 19:37:34,690 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 19:37:34,780 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 19:37:34,881 - [test_register.py-->line:77] - INFO: 用例--【不输入类型】---执行通过
2020-12-31 19:37:35,049 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-31 19:37:35,186 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-31 19:37:35,311 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-31 19:37:35,444 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-31 19:37:35,572 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 19:37:35,680 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 19:37:35,795 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-31 19:37:35,796 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 19:37:35,919 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-31 19:37:35,919 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 19:37:36,044 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-31 19:37:36,044 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-31 19:37:36,157 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-31 19:37:36,158 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 19:37:36,297 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-31 19:37:36,297 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 19:37:36,404 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-31 20:29:04,323 - [test_add.py-->line:63] - ERROR: 用例--【加标成功】---执行失败
2020-12-31 20:29:04,334 - [test_add.py-->line:64] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-12-31 20:29:04,380 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2020-12-31 20:29:04,422 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—标题为空】---执行失败
2020-12-31 20:29:04,422 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,465 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为空】---执行失败
2020-12-31 20:29:04,466 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,522 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—年利率为空】---执行失败
2020-12-31 20:29:04,522 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,569 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款期限为空】---执行失败
2020-12-31 20:29:04,570 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,632 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款期限类型为空】---执行失败
2020-12-31 20:29:04,633 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,685 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—竞标天数为空】---执行失败
2020-12-31 20:29:04,685 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:29:04,733 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为负数】---执行失败
2020-12-31 20:29:04,733 - [test_add.py-->line:64] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-12-31 20:29:04,792 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为小数】---执行失败
2020-12-31 20:29:04,793 - [test_add.py-->line:64] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-12-31 20:29:04,855 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-31 20:29:04,907 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 20:29:04,953 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 20:29:04,999 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 20:29:05,047 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 20:29:05,090 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 20:29:05,311 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-31 20:29:05,486 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-31 20:29:05,655 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-31 20:29:05,820 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-31 20:29:05,978 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 20:29:06,136 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 20:29:06,294 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-31 20:29:06,294 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 20:29:06,460 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-31 20:29:06,460 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:29:06,639 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-31 20:29:06,641 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-31 20:29:06,803 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-31 20:29:06,803 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 20:29:06,955 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-31 20:29:06,957 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:29:07,135 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-31 20:29:07,250 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 20:29:07,367 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 20:29:07,468 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 20:29:07,584 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 20:29:07,689 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 20:29:07,803 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 20:29:07,918 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 20:29:08,042 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 20:29:08,152 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 20:29:08,267 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 20:29:08,358 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 20:29:08,472 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 20:29:08,588 - [test_register.py-->line:77] - INFO: 用例--【不输入类型】---执行通过
2020-12-31 20:29:08,841 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-31 20:29:09,002 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-31 20:29:09,154 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-31 20:29:09,315 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-31 20:29:09,481 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 20:29:09,656 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 20:29:09,816 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-31 20:29:09,816 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 20:29:09,974 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-31 20:29:09,975 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 20:29:10,131 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-31 20:29:10,131 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-31 20:29:10,307 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-31 20:29:10,307 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 20:29:10,485 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-31 20:29:10,486 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 20:29:10,635 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-31 20:32:44,304 - [test_add.py-->line:63] - ERROR: 用例--【加标成功】---执行失败
2020-12-31 20:32:44,305 - [test_add.py-->line:64] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-12-31 20:32:46,877 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2020-12-31 20:32:46,922 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—标题为空】---执行失败
2020-12-31 20:32:46,924 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:46,997 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为空】---执行失败
2020-12-31 20:32:46,998 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:47,061 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—年利率为空】---执行失败
2020-12-31 20:32:47,061 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:47,109 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款期限为空】---执行失败
2020-12-31 20:32:47,111 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:47,208 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款期限类型为空】---执行失败
2020-12-31 20:32:47,209 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:47,278 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—竞标天数为空】---执行失败
2020-12-31 20:32:47,278 - [test_add.py-->line:64] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-12-31 20:32:47,333 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为负数】---执行失败
2020-12-31 20:32:47,333 - [test_add.py-->line:64] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-12-31 20:32:47,383 - [test_add.py-->line:63] - ERROR: 用例--【加标失败—借款金额为小数】---执行失败
2020-12-31 20:32:47,383 - [test_add.py-->line:64] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_add.py", line 60, in test_add
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2020-12-31 20:32:47,440 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-31 20:32:47,496 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 20:32:47,562 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 20:32:47,632 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 20:32:47,700 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 20:32:47,765 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 20:32:47,985 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-31 20:32:48,156 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-31 20:32:48,325 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-31 20:32:48,490 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-31 20:32:48,656 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 20:32:48,827 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 20:32:48,989 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-31 20:32:48,996 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 20:32:49,192 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-31 20:32:49,192 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:32:49,365 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-31 20:32:49,366 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-31 20:32:49,532 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-31 20:32:49,533 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 20:32:49,711 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-31 20:32:49,711 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:32:49,902 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-31 20:32:50,022 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 20:32:50,168 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 20:32:50,290 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 20:32:50,392 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 20:32:50,516 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 20:32:50,648 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 20:32:50,766 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 20:32:50,874 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 20:32:50,976 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 20:32:51,083 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 20:32:51,178 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 20:32:51,305 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 20:32:54,831 - [test_add.py-->line:67] - INFO: 用例--【加标成功】---执行成功
2020-12-31 20:32:54,885 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2020-12-31 20:32:54,926 - [test_add.py-->line:67] - INFO: 用例--【加标失败—标题为空】---执行成功
2020-12-31 20:32:54,978 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2020-12-31 20:32:55,035 - [test_add.py-->line:67] - INFO: 用例--【加标失败—年利率为空】---执行成功
2020-12-31 20:32:55,081 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2020-12-31 20:32:55,136 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2020-12-31 20:32:55,191 - [test_add.py-->line:67] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2020-12-31 20:32:55,234 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2020-12-31 20:32:55,291 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2020-12-31 20:32:55,338 - [test_add.py-->line:67] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2020-12-31 20:32:55,404 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-31 20:32:55,445 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 20:32:55,495 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 20:32:55,555 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 20:32:55,616 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 20:32:55,657 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 20:32:55,873 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-31 20:32:56,026 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-31 20:32:56,193 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-31 20:32:56,365 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-31 20:32:56,514 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 20:32:56,689 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 20:32:56,882 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-31 20:32:56,882 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 20:32:57,047 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-31 20:32:57,048 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:32:57,200 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-31 20:32:57,200 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-31 20:32:57,357 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-31 20:32:57,357 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 20:32:57,509 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-31 20:32:57,509 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 20:32:57,671 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-31 20:32:57,797 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 20:32:57,908 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 20:32:58,006 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 20:32:58,112 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 20:32:58,201 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 20:32:58,297 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 20:32:58,410 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 20:32:58,507 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 20:32:58,624 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 20:32:58,738 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 20:32:58,850 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 20:32:58,945 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 20:32:59,062 - [test_register.py-->line:77] - INFO: 用例--【不输入类型】---执行通过
2020-12-31 20:32:59,253 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-31 20:32:59,391 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-31 20:32:59,525 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-31 20:32:59,664 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-31 20:32:59,805 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 20:32:59,937 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 20:33:00,088 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-31 20:33:00,088 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 20:33:00,230 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-31 20:33:00,230 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 20:33:00,380 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-31 20:33:00,381 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-31 20:33:00,505 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-31 20:33:00,506 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 20:33:00,659 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-31 20:33:00,660 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 20:33:00,803 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
2020-12-31 20:41:42,798 - [test_add.py-->line:85] - INFO: 用例--【加标成功】---执行成功
2020-12-31 20:41:42,925 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2020-12-31 20:41:43,070 - [test_add.py-->line:85] - INFO: 用例--【加标失败—标题为空】---执行成功
2020-12-31 20:41:43,192 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2020-12-31 20:41:43,323 - [test_add.py-->line:85] - INFO: 用例--【加标失败—年利率为空】---执行成功
2020-12-31 20:41:43,445 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2020-12-31 20:41:43,582 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2020-12-31 20:41:43,721 - [test_add.py-->line:85] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2020-12-31 20:41:43,840 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2020-12-31 20:41:43,969 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2020-12-31 20:41:44,108 - [test_add.py-->line:85] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2020-12-31 21:43:32,030 - [test_audit.py-->line:119] - INFO: 用例--【审核通过】---执行通过
2020-12-31 21:43:32,137 - [test_audit.py-->line:119] - INFO: 用例--【审核不通过】---执行通过
2020-12-31 21:43:32,245 - [test_audit.py-->line:119] - INFO: 用例--【项目不待审核状态】---执行通过
2020-12-31 21:43:32,463 - [test_audit.py-->line:119] - INFO: 用例--【项目id为空】---执行通过
2020-12-31 21:43:32,563 - [test_audit.py-->line:119] - INFO: 用例--【项目id不存在】---执行通过
2020-12-31 21:45:26,173 - [test_audit.py-->line:119] - INFO: 用例--【审核通过】---执行通过
2020-12-31 21:45:26,299 - [test_audit.py-->line:119] - INFO: 用例--【审核不通过】---执行通过
2020-12-31 21:45:26,396 - [test_audit.py-->line:119] - INFO: 用例--【项目不待审核状态】---执行通过
2020-12-31 21:45:26,541 - [test_audit.py-->line:119] - INFO: 用例--【参数approved_or_not为空】---执行通过
2020-12-31 21:45:26,655 - [test_audit.py-->line:119] - INFO: 用例--【项目id为空】---执行通过
2020-12-31 21:45:26,756 - [test_audit.py-->line:119] - INFO: 用例--【项目id不存在】---执行通过
2020-12-31 21:49:23,625 - [test_audit.py-->line:121] - INFO: 用例--【审核通过】---执行通过
2020-12-31 21:49:23,727 - [test_audit.py-->line:121] - INFO: 用例--【审核不通过】---执行通过
2020-12-31 21:49:23,853 - [test_audit.py-->line:121] - INFO: 用例--【项目不待审核状态】---执行通过
2020-12-31 21:49:23,945 - [test_audit.py-->line:121] - INFO: 用例--【参数approved_or_not为空】---执行通过
2020-12-31 21:49:24,046 - [test_audit.py-->line:121] - INFO: 用例--【项目id为空】---执行通过
2020-12-31 21:49:24,146 - [test_audit.py-->line:121] - INFO: 用例--【项目id不存在】---执行通过
2020-12-31 22:00:46,300 - [test_audit.py-->line:127] - INFO: 用例--【审核通过】---执行通过
2020-12-31 22:00:46,481 - [test_audit.py-->line:127] - INFO: 用例--【审核不通过】---执行通过
2020-12-31 22:00:49,591 - [test_audit.py-->line:127] - INFO: 用例--【项目不待审核状态】---执行通过
2020-12-31 22:00:49,720 - [test_audit.py-->line:127] - INFO: 用例--【参数approved_or_not为空】---执行通过
2020-12-31 22:00:49,829 - [test_audit.py-->line:127] - INFO: 用例--【项目id为空】---执行通过
2020-12-31 22:00:49,945 - [test_audit.py-->line:127] - INFO: 用例--【项目id不存在】---执行通过
2020-12-31 22:01:52,710 - [test_add.py-->line:79] - INFO: 用例--【加标成功】---执行成功
2020-12-31 22:01:52,857 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款人id为空】---执行成功
2020-12-31 22:01:53,001 - [test_add.py-->line:79] - INFO: 用例--【加标失败—标题为空】---执行成功
2020-12-31 22:01:53,145 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款金额为空】---执行成功
2020-12-31 22:01:53,281 - [test_add.py-->line:79] - INFO: 用例--【加标失败—年利率为空】---执行成功
2020-12-31 22:01:53,415 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款期限为空】---执行成功
2020-12-31 22:01:53,550 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款期限类型为空】---执行成功
2020-12-31 22:01:53,672 - [test_add.py-->line:79] - INFO: 用例--【加标失败—竞标天数为空】---执行成功
2020-12-31 22:01:53,802 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款人id不是当前登录用户】---执行成功
2020-12-31 22:01:53,920 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款金额为负数】---执行成功
2020-12-31 22:01:54,051 - [test_add.py-->line:79] - INFO: 用例--【加标失败—借款金额为小数】---执行成功
2020-12-31 22:01:54,292 - [test_audit.py-->line:128] - INFO: 用例--【审核通过】---执行通过
2020-12-31 22:01:54,438 - [test_audit.py-->line:128] - INFO: 用例--【审核不通过】---执行通过
2020-12-31 22:01:54,559 - [test_audit.py-->line:128] - INFO: 用例--【项目不待审核状态】---执行通过
2020-12-31 22:01:54,647 - [test_audit.py-->line:128] - INFO: 用例--【参数approved_or_not为空】---执行通过
2020-12-31 22:01:54,766 - [test_audit.py-->line:128] - INFO: 用例--【项目id为空】---执行通过
2020-12-31 22:01:54,880 - [test_audit.py-->line:128] - INFO: 用例--【项目id不存在】---执行通过
2020-12-31 22:01:54,918 - [test_login.py-->line:56] - INFO: 用例--【登录成功】---执行通过
2020-12-31 22:01:54,959 - [test_login.py-->line:56] - INFO: 用例--【手机号为空】---执行通过
2020-12-31 22:01:54,998 - [test_login.py-->line:56] - INFO: 用例--【密码为空】---执行通过
2020-12-31 22:01:55,064 - [test_login.py-->line:56] - INFO: 用例--【手机号未注册】---执行通过
2020-12-31 22:01:55,128 - [test_login.py-->line:56] - INFO: 用例--【密码错误】---执行通过
2020-12-31 22:01:55,186 - [test_login.py-->line:56] - INFO: 用例--【手机号格式错误】---执行通过
2020-12-31 22:01:55,401 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-整数】---执行通过
2020-12-31 22:01:55,548 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-1位小数】---执行通过
2020-12-31 22:01:55,694 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-2位小数】---执行通过
2020-12-31 22:01:55,857 - [test_recharge.py-->line:113] - INFO: 用例--【充值成功-50万】---执行通过
2020-12-31 22:01:56,020 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 22:01:56,161 - [test_recharge.py-->line:113] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 22:01:56,307 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为0】---执行失败
2020-12-31 22:01:56,307 - [test_recharge.py-->line:110] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 22:01:56,473 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为负数】---执行失败
2020-12-31 22:01:56,473 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 22:01:56,629 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额为空】---执行失败
2020-12-31 22:01:56,629 - [test_recharge.py-->line:110] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 98, in test_recharge
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-12-31 22:01:56,795 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-3位小数】---执行失败
2020-12-31 22:01:56,796 - [test_recharge.py-->line:110] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 22:01:56,969 - [test_recharge.py-->line:109] - ERROR: 用例--【充值金额-大于50万】---执行失败
2020-12-31 22:01:56,971 - [test_recharge.py-->line:110] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_recharge.py", line 99, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-12-31 22:01:57,119 - [test_recharge.py-->line:113] - INFO: 用例--【充值金额-非数字】---执行通过
2020-12-31 22:01:57,221 - [test_register.py-->line:77] - INFO: 用例--【注册成功-带注册名】---执行通过
2020-12-31 22:01:57,328 - [test_register.py-->line:77] - INFO: 用例--【成功-不带用户名】---执行通过
2020-12-31 22:01:57,411 - [test_register.py-->line:77] - INFO: 用例--【不输入手机号】---执行通过
2020-12-31 22:01:57,516 - [test_register.py-->line:77] - INFO: 用例--【手机号长度10位】---执行通过
2020-12-31 22:01:57,615 - [test_register.py-->line:77] - INFO: 用例--【手机号长度12位】---执行通过
2020-12-31 22:01:57,702 - [test_register.py-->line:77] - INFO: 用例--【手机号含有非法字符】---执行通过
2020-12-31 22:01:57,806 - [test_register.py-->line:77] - INFO: 用例--【已注册过的手机号】---执行通过
2020-12-31 22:01:57,897 - [test_register.py-->line:77] - INFO: 用例--【密码7位】---执行通过
2020-12-31 22:01:57,980 - [test_register.py-->line:77] - INFO: 用例--【密码17位】---执行通过
2020-12-31 22:01:58,068 - [test_register.py-->line:77] - INFO: 用例--【不输入密码】---执行通过
2020-12-31 22:01:58,153 - [test_register.py-->line:77] - INFO: 用例--【注册名11位】---执行通过
2020-12-31 22:01:58,240 - [test_register.py-->line:77] - INFO: 用例--【类型输入非0，1内容】---执行通过
2020-12-31 22:01:58,336 - [test_register.py-->line:77] - INFO: 用例--【不输入类型】---执行通过
2020-12-31 22:01:58,534 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-整数】---执行通过
2020-12-31 22:01:58,690 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-1位小数】---执行通过
2020-12-31 22:01:58,823 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-2位小数】---执行通过
2020-12-31 22:01:58,952 - [test_withdraw.py-->line:106] - INFO: 用例--【提现成功-50万】---执行通过
2020-12-31 22:01:59,085 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为空】---执行通过
2020-12-31 22:01:59,210 - [test_withdraw.py-->line:106] - INFO: 用例--【会员id为小数】---执行通过
2020-12-31 22:01:59,344 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为0】---执行失败
2020-12-31 22:01:59,344 - [test_withdraw.py-->line:103] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 94, in test_withdraw
    self.assertEqual(expected['code'], res['code'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-12-31 22:01:59,480 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为负数】---执行失败
2020-12-31 22:01:59,481 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 22:01:59,623 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额为空】---执行失败
2020-12-31 22:01:59,623 - [test_withdraw.py-->line:103] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-12-31 22:01:59,771 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-3位小数】---执行失败
2020-12-31 22:01:59,772 - [test_withdraw.py-->line:103] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-12-31 22:01:59,912 - [test_withdraw.py-->line:102] - ERROR: 用例--【提现金额-大于50万】---执行失败
2020-12-31 22:01:59,912 - [test_withdraw.py-->line:103] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\python_35\py35_26day_project\testcases\test_withdraw.py", line 95, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-12-31 22:02:00,059 - [test_withdraw.py-->line:106] - INFO: 用例--【提现金额-非数字】---执行通过
