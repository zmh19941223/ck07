<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tal.wangxiao.conan.common.mapper.DomainAuthMapper">

    <resultMap type="DomainAuth" id="DomainAuthResult">
        <result property="authId"    column="auth_id"    />
        <result property="curlUrl"    column="curl_url"    />
        <result property="responseGetCookieKey"    column="response_get_cookie_key"    />
        <result property="keyType"    column="key_type"    />
        <result property="domainId"    column="domain_id"    />
        <result property="updateTime"    column="update_time"    />
        <result property="cookie"    column="cookie"    />
    </resultMap>

    <sql id="selectDomainAuthVo">
        select auth_id, curl_url, response_get_cookie_key, key_type, domain_id, update_time, cookie from bss_domain_auth
    </sql>

    <select id="selectDomainAuthList" parameterType="DomainAuth" resultMap="DomainAuthResult">
        <include refid="selectDomainAuthVo"/>
        <where>
            <if test="curlUrl != null  and curlUrl != ''"> and curl_url = #{curlUrl}</if>
            <if test="responseGetCookieKey != null  and responseGetCookieKey != ''"> and response_get_cookie_key = #{responseGetCookieKey}</if>
            <if test="keyType != null "> and key_type = #{keyType}</if>
            <if test="domainId != null "> and domain_id = #{domainId}</if>
            <if test="cookie != null  and cookie != ''"> and cookie = #{cookie}</if>
        </where>
    </select>

    <select id="selectDomainAuthById" parameterType="Integer" resultMap="DomainAuthResult">
        <include refid="selectDomainAuthVo"/>
        where auth_id = #{authId}
    </select>

    <insert id="insertDomainAuth" parameterType="DomainAuth">
        insert into bss_domain_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="authId != null">auth_id,</if>
            <if test="curlUrl != null and curlUrl != ''">curl_url,</if>
            <if test="responseGetCookieKey != null">response_get_cookie_key,</if>
            <if test="keyType != null">key_type,</if>
            <if test="domainId != null">domain_id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="cookie != null">cookie,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="authId != null">#{authId},</if>
            <if test="curlUrl != null and curlUrl != ''">#{curlUrl},</if>
            <if test="responseGetCookieKey != null">#{responseGetCookieKey},</if>
            <if test="keyType != null">#{keyType},</if>
            <if test="domainId != null">#{domainId},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="cookie != null">#{cookie},</if>
        </trim>
    </insert>

    <update id="updateDomainAuth" parameterType="DomainAuth">
        update bss_domain_auth
        <trim prefix="SET" suffixOverrides=",">
            <if test="curlUrl != null and curlUrl != ''">curl_url = #{curlUrl},</if>
            <if test="responseGetCookieKey != null">response_get_cookie_key = #{responseGetCookieKey},</if>
            <if test="keyType != null">key_type = #{keyType},</if>
            <if test="domainId != null">domain_id = #{domainId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="cookie != null">cookie = #{cookie},</if>
        </trim>
        where auth_id = #{authId}
    </update>

    <delete id="deleteDomainAuthById" parameterType="Integer">
        delete from bss_domain_auth where auth_id = #{authId}
    </delete>

    <delete id="deleteDomainAuthByIds" parameterType="String">
        delete from bss_domain_auth where auth_id in
        <foreach item="authId" collection="array" open="(" separator="," close=")">
            #{authId}
        </foreach>
    </delete>

</mapper>